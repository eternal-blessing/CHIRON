name: python CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ main ]

jobs:
  validate-environment:
    name: Validate on ${{ matrix.os }} with Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache Pipenv
        uses: actions/cache@v3
        with:
          path: ~/.cache/pipenv
          key: ${{ runner.os }}-pipenv-${{ hashFiles('Pipfile.lock') }}
          restore-keys: |
            ${{ runner.os }}-pipenv-

      - name: Install system dependencies (Linux)
        if: runner.os == 'Linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-glx

      - name: Install system dependencies (macOS)
        if: runner.os == 'macOS'
        run: |
          brew install openblas

      - name: Install Pipenv
        run: pip install pipenv

      - name: Install dependencies
        run: |
          pipenv install --dev
          pipenv graph

      - name: Verify critical packages
        run: |
          pipenv run python -c "import cv2; print(f'OpenCV: {cv2.__version__}')"
          pipenv run python -c "import mediapipe; print(f'MediaPipe: {mediapipe.__version__}')"
          pipenv run python -c "import pygame; print(f'PyGame: {pygame.__version__}')"

      - name: Run basic functionality test
        run: |
          pipenv run pytest tests/test_environment.py -v
